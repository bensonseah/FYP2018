@{
    Layout = null;
    var localOrders = ViewData["localOrders"] as List<Order>;
    var overseasOrders = ViewData["overseasOrders"] as List<Order>;
    var categories = ViewData["categories"] as List<Category>;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Demo - Multiple Columns Grouping, Union, Inner Join</title>
    <!-- style sheets references -->
    <link href="~/lib/styles/bootstrap.min.css" rel="stylesheet" />

    <!-- script files references -->
    <script src="~/lib/scripts/jquery.min.js"></script>
    <script src="~/lib/scripts/bootstrap.min.js"></script>
</head>
<body>
    <div class="container">
        <h2>LINQ Demo - Multiple Columns Grouping, Union, Inner Join</h2>
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#Step1">Step 1: Union both local and overseas orders</a></li>
            <li><a data-toggle="tab" href="#Step2">Step 2: Group and sorted by CatId, Region showing average quantity </a></li>
            <li><a data-toggle="tab" href="#FinalStep">Final Step: Inner Join with Categories to show average quantiy sold grouped by Category, Region</a></li>
        </ul>

        <div class="tab-content">
            <div id="Step1" class="tab-pane fade in active">
                <div>
                    @{

                        // TODO P03 3-1: Write LINQ queries for sequence1, sequence2 and unionSeq. Refer to the slide section on LINQ to help you.
                        var sequence1 = localOrders;  // This line needs to be changed

                        var sequence2 = overseasOrders; // This line needs to be changed

                        var unionSeq = new List<dynamic>(); // This line needs to be changed
                    }
                    <table class="table table-bordered table-condensed table-hover table-striped">
                        <tr>
                            <th>CatId</th>
                            <th>Region</th>
                            <th>Qty</th>
                        </tr>
                        @foreach (var r in unionSeq)
        {
                <tr>
                    <td>@r.CatId</td>
                <td>@r.Region</td>
                <td>@r.Qty</td>
                </tr>
}
                    </table>
                </div>
            </div>
            <div id="Step2" class="tab-pane fade">
                @{
                    // TODO P03 3-2: Write LINQ query for groupedResult. Refer to the slide section on LINQ to help you.

                    var groupedResult = unionSeq; // This line needs to be changed

                }
                <div>
                    <table class="table table-bordered table-condensed table-hover table-striped">
                        <tr>
                            <th>CatId</th>
                            <th>Region</th>
                            <th>AverageQty</th>
                        </tr>
                        @foreach (var r in groupedResult)
            {
                <tr>
                    <td>@r.CatId</td>
                    <td>@r.Region</td>
            <td>@r.AverageQty</td>
            </tr>
}
                    </table>
                </div>
            </div>
            <div id="FinalStep" class="tab-pane fade">
                <div>
                    @{
                        // TODO P03 3-3: Write LINQ query for summary. Refer to the slide section on LINQ to help you.

                        var summary = groupedResult; // This line needs to be changed
                    }
                    <table class="table table-bordered table-condensed table-hover table-striped">
                        <tr>
                            <th>Category</th>
                            <th>Region</th>
                            <th>AverageQty</th>
                        </tr>
                        @foreach (var r in summary)
        {
                <tr>
                    <td>@r.Category</td>
                <td>@r.Region</td>
                <td>@r.AverageQty</td>
                </tr>
}
                    </table>
                </div>
            </div>
        </div>
    </div>

</body>
</html>
